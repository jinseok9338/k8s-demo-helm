{{- if .Values.migration.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "backend-api.fullname" . }}-migration-job
  labels:
    {{- include "backend-api.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5" # Run before other hooks
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "backend-api.fullname" . }}-migration-runner
      labels:
        {{- include "backend-api.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
    spec:
      restartPolicy: Never
      containers:
        - name: migration-runner
          image: "{{ .Values.migration.image }}" # Use the image specified in values.yaml
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Starting database migration..."
              # Loop through all SQL files mounted from the ConfigMap and execute them
              for file in /migrations/*.sql; do
                echo "Executing migration: $file"
                psql -v ON_ERROR_STOP=1 --host "$PGHOST" --port "$PGPORT" --username "$PGUSER" --dbname "$PGDATABASE" -f "$file"
              done
              echo "Database migration finished."
          env:
            # Read connection details from the specified secret
            - name: PGHOST
              value: {{ .Values.database.host | quote }}
            - name: PGPORT
              value: {{ .Values.database.port | quote }}
            - name: PGDATABASE
              value: {{ .Values.database.dbName | quote }}
            - name: PGUSER
              value: "postgres" # Use the default Bitnami username directly
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret | quote }} # Secret name from values.yaml
                  key: postgres-password # Adjusted key name based on inspection
          volumeMounts:
            - name: migrations-volume
              mountPath: /migrations
      volumes:
        - name: migrations-volume
          configMap:
            name: {{ include "backend-api.fullname" . }}-migrations # Mount the ConfigMap we created
  backoffLimit: 1 # Number of retries before marking the job as failed
{{- end }} 