# Default values for backend-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Company Code (tenant identifier), to be set during deployment for internal logic
companyCode: ""

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 2

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: jinseok93338/backend-api-poc
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.1.10"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 3000

# IngressRoute settings for Traefik
ingressRoute:
  enabled: true # Disabled for local testing via port-forward
  # Path prefix for backend API routes
  # pathPrefix: /api # No longer needed
  # Middleware to strip the prefix before forwarding to the service
  # stripPrefix: true # No longer needed

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true # Keep it enabled conceptually, route created above
  host: api.localhost # Default host, override per tenant
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 300m # CPU 0.3 코어 제한
    memory: 256Mi # 메모리 256 MiB 제한
  requests:
    cpu: 100m # CPU 0.1 코어 요청
    memory: 128Mi # 메모리 128 MiB 요청

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 15 # Give the app time to initialize DB connection

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Explicitly define the update strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0 # Ensure at least one pod is always available
    maxSurge: 1 # Allow one extra pod during updates

# --- NEW: Master Backend URL ---
masterBackend:
  url: "http://localhost:3001" # Default for local testing, override as needed
# --- End NEW ---

# --- NEW: Database Connection Settings (sourced within cluster) ---
db:
  # Name of the Kubernetes Service for PostgreSQL
  serviceName: "postgresql" # Default assumes release name 'db' from bitnami/postgresql
  port: 5432
  # Database user
  user: "postgres" # Default Bitnami user
  # Database name
  dbName: "postgres" # Default Bitnami database
  # Name of the Kubernetes Secret holding the database password
  existingSecret: "postgresql" # Default assumes release name 'db' from bitnami/postgresql
  # Key within the secret that contains the password
  secretPasswordKey: "postgres-password" # Default key used by Bitnami chart
# --- End NEW ---

# --- NEW: Middleware Configuration ---
middleware:
  stripPrefix:
    # If true, the middleware-stripprefix.yaml template will create a StripPrefix Middleware
    enabled: false
    # The name is generated automatically using the Helm fullname template + '-stripprefix-api'
    # Example: If release name is 'backend-dir', middleware name will be 'backend-dir-backend-api-stripprefix-api'
# --- End NEW ---

# Migration Job Configuration
# --- DISABLED: Migration handled externally or manually ---
migration:
  enabled: false # Disabled
  # image: postgres:15-alpine
  # migrationsPath: "migrations"
# --- End DISABLED ---

# --- REMOVED: PostgreSQL dependency settings no longer needed here ---
