apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "master-backend.fullname" . }}
  labels:
    {{- include "master-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "master-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "master-backend.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "master-backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          # Add liveness and readiness probes
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: DATABASE_URL
              # It's best practice to get this from a Secret
              # Example using a value directly (less secure):
              # value: {{ .Values.config.database.url | quote }}
              # Example using a Secret (recommended):
              valueFrom:
                secretKeyRef:
                  # Use the secret name defined in values (defaulting to master-db-secret)
                  name: {{ .Values.databaseSecretName | default "master-db-secret" }}
                  key: DATABASE_URL # The key within the secret
            # Add other environment variables your application needs
            - name: PORT
              value: {{ .Values.service.targetPort | quote }}
            # Add KUBERNETES_ENV from values - RESTORED
            {{- if .Values.env.KUBERNETES_ENV }}
            - name: KUBERNETES_ENV
              value: {{ .Values.env.KUBERNETES_ENV | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 