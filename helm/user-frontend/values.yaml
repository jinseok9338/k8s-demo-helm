# Default values for user-frontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Company Code (tenant identifier), to be set during deployment
companyCode: "" # No longer needed for ingressRoute

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 2

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: jinseok93338/front-end-user
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.2.0"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# Backend API URL - No longer needed here when using relative paths via Ingress
# backendApiUrl: ""

# --- REMOVED/MODIFIED: Standard Ingress or previous route settings ---
# ingress:
#   enabled: ...
# ingressRoute:
#   enabled: false # Previous setting

# --- NEW: IngressRoute Configuration ---
ingressRoute:
  # Set to true during helm install/upgrade to create the IngressRoute
  enabled: true

  # Hostname for this tenant, e.g., app.dir.localhost or app.cha.localhost
  # MUST be set during helm install/upgrade
  host: "app.dir.localhost"

  # Traefik entrypoints to use (usually ["web"] for HTTP)
  entryPoints:
    - web

  # Configuration for routing /api requests to the backend
  backend:
    # Name of the backend-api service (e.g., backend-dir-backend-api)
    # MUST be set during helm install/upgrade
    serviceName: "backend-api"

    # Port of the backend-api service
    port: 3000

    # Name of the StripPrefix Middleware created by the backend-api chart
    # (e.g., backend-dir-backend-api-stripprefix-api)
    # MUST be set during helm install/upgrade
    middlewareName: "backend-api-stripprefix-api"

    # Namespace where the Middleware exists (optional, defaults to current namespace)
    middlewareNamespace: "dir-tenant"
# --- End NEW ---

# Explicitly define the update strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0 # Ensure at least one pod is always available
    maxSurge: 1 # Allow one extra pod during updates

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 150m # CPU 0.15 코어 제한
    memory: 128Mi # 메모리 128 MiB 제한
  requests:
    cpu: 50m # CPU 0.05 코어 요청
    memory: 64Mi # 메모리 64 MiB 요청

# Enable probes using TCP check for Nginx
livenessProbe:
  enabled: true
  tcpSocket:
    port: http # Check if the container's port 80 is open
  initialDelaySeconds: 10
  periodSeconds: 10
readinessProbe:
  enabled: true
  tcpSocket:
    port: http # Check if the container's port 80 is open
  initialDelaySeconds: 5
  periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
